#nginx wants 5000
server.port=5000

#RDS_HOSTNAME: The hostname of the DB instance.
#Amazon RDS console label \u2013 Endpoint (this is the hostname)
#
#RDS_PORT: The port on which the DB instance accepts connections. The default value varies among DB engines.
#Amazon RDS console label \u2013 Port
#
#RDS_DB_NAME: The database name, ebdb.
#Amazon RDS console label \u2013 DB Name
#
#RDS_USERNAME: The user name that you configured for your database.
#Amazon RDS console label \u2013 Username
#
#RDS_PASSWORD: The password that you configured for your database.

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://aaltdfwbd2fxwx.cowikpo7nugc.us-east-2.rds.amazonaws.com:3306/ebdb
#spring.datasource.username = ${RDS_USERNAME}
#spring.datasource.password = ${RDS_PASSWORD}

spring.datasource.url = jdbc:mysql://aaltdfwbd2fxwx.cowikpo7nugc.us-east-2.rds.amazonaws.com:3306/ebdb
spring.datasource.username = root
spring.datasource.password = mattia000

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = create

spring.jpa.hibernate.ddl-auto = update

spring.jpa.generate-ddl=true




# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect